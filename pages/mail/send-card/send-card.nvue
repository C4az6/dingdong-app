<template>
	<view>
			<!-- 导航栏 -->
			<free-nav-bar title="选择" showBack :showRight="true">
				<free-mail-button :name="multiSelect ? `发送2(${selectCount})`  : '多选'" slot="right" @click="handleNavBarBtn"></free-mail-button>
			</free-nav-bar>
			
			<!-- 搜索框 -->
			<view class="p-3 bg-light position-fixed left-0 right-0" :style="'top:'+top+'px;'">
				<input type="text" v-model.trim="searchValue" placeholder="搜索" class="bg-white rounded" placeholder-class="text-center" style="height: 80rpx;"/>
			</view> 
			<view style="height: 140rpx"></view>
			<!-- 联系人列表 -->
			<free-list-item title="更多联系人" :leftIconShow="false" :borderBottom="false"></free-list-item>
			<view class="px-2 py-1 bg-light">
				<text class="font-sm text-muted">{{searchValue ? '搜索结果' : '最近联系人'}}</text>
			</view>
			<free-list-item v-for="(item, index) in searchList" :key="index" :title="item.username"  :cover="item.avatar" rightIconShow :arrows="false" @click="selectItem(item)">
				<view v-if="multiSelect" class="flex align-center justify-center rounded-circle border" slot="right" style="width: 40rpx;height:40rpx;">
					<view v-if="item.checked" style="width: 30rpx; height: 30rpx;" class="main-bg-color rounded-circle">
					</view>
				</view>
			</free-list-item>
			<!-- 无搜索结果 -->
			<view class="flex justify-center align-center" v-if="searchValue && !searchList.length" style="height: 100rpx;">
				<text class="font text-light-muted">暂无搜索结果</text>
			</view>
			
			<!-- 发送给好友弹出层 -->
			<FreeConfirm ref="confirm"></FreeConfirm>

	</view>
</template>

<script>
	import freeNavBar from '@/components/free-ui/free-nav-bar.vue';
	import freeMailButton from '@/components/free-ui/free-mail-button.vue';
	import freeListItem from '@/components/free-ui/free-list-item.vue';
	import FreePopup from '@/components/free-ui/free-popup.vue';
	import FreeAvatar from '@/components/free-ui/free-avatar.vue'
	import FreeConfirm from '@/components/free-ui/free-confirm.vue'
	export default {
		components: {
			freeNavBar,
			freeMailButton,
			freeListItem,
			FreePopup,
			FreeAvatar,
			FreeConfirm
		},
		data() {
			return {
				multiSelect: false,		// 是否处于多选状态
				top: 0,		// 状态栏 + 导航栏的高度
				list: [
					{
						username: 'alexander1',
						avatar: '/static/images/mail/friend.png',
						checked: false
					},
					{
						username: 'alexander2',
						avatar: '/static/images/mail/friend.png',
						checked: false
					},
					{
						username: 'alexander3',
						avatar: '/static/images/mail/friend.png',
						checked: false
					},
					{
						username: 'alexander4',
						avatar: '/static/images/mail/friend.png',
						checked: false
					},					{
						username: 'alexander5',
						avatar: '/static/images/mail/friend.png',
						checked: false
					},
					{
						username: 'alexande6r',
						avatar: '/static/images/mail/friend.png',
						checked: false
					},
					{
						username: 'alexander7',
						avatar: '/static/images/mail/friend.png',
						checked: false
					},
					{
						username: 'alexander8',
						avatar: '/static/images/mail/friend.png',
						checked: false
					},
					{
						username: 'alexander9',
						avatar: '/static/images/mail/friend.png',
						checked: false
					},
					{
						username: 'alexander10',
						avatar: '/static/images/mail/friend.png',
						checked: false
					},
					{
						username: 'alexander11',
						avatar: '/static/images/mail/friend.png',
						checked: false
					},
					{
						username: 'alexander12',
						avatar: '/static/images/mail/friend.png',
						checked: false
					}
				],
				searchValue: "",		// 搜索的数据
			}
		},
		methods: {
			// 监听导航栏点击事件
			handleNavBarBtn() {
				if(!this.multiSelect) {
					// 如果此时不是多选状态则切换成多选状态
					return this.multiSelect = true
				}
				// 执行发送逻辑
			},
			
			// 选中 / 取消 选中
			selectItem(item) {
				if(this.multiSelect) {
					// 选中的情况需要判断选中的数量，最大选中数量为9
					if(!item.checked && this.selectCount === 9) {
						return uni.showToast({
							title: '最多选中9个',
							icon: 'none'
						});
					}
					item.checked = !item.checked
				}
			}
			 
		},
		onLoad() {
			console.log("send-card onload...")
			let res = uni.getSystemInfoSync()
			this.top = res.statusBarHeight + uni.upx2px(90)
		},
		computed: {
			// 搜索列表
			searchList() {
				if(!this.searchValue) {
					return this.list
				}
				return this.list.filter(item => item.username.includes(this.searchValue))
			},
			
			// 选中列表
			selectList() {
				return this.list.filter(item => item.checked)
			},
			// 选中数量
			selectCount() {
				return this.selectList.length
			}
		}
	}
</script>

<style>

</style>
