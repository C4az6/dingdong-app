<template>
	<view>
		<!-- 导航栏 -->
		<free-nav-bar title titleValue="通讯录" fixed @openPopup="handleOpenPopup" />

		<scroll-view scroll-y="true" :style="'height:'+scrollHeight+'px;'" :scroll-into-view="scrollInto">
			<!-- 通讯录列表组件 -->
			<free-list-item v-for="(item, index) in topList" :key="index" :cover="item.cover" :title="item.title" />

			<!-- 通讯录列表 -->
			<block v-for="(item, index) in list">
				<view v-if="item.data.length" :key="index" :id="'item-'+item.letter">
					<view class="py-2 px-3 border-bottom bg-light">
						<text class="font-sm text-dark">{{item.letter}}</text>
					</view>
					<free-list-item v-for="(item2, index2) in item.data" :key="index2" :title="item2"
						cover="/static/avatar.jpg" />
				</view>
			</block>
		</scroll-view>

		<!-- 通讯录索引列表 -->
		<view class="position-fixed right-0 bottom-0  bg-light flex flex-column" style="width: 50rpx;"
			:style="'top:'+top+'px;'" @touchstart="touchstart" @touchmove="touchmove" @touchend="touchend">
			<view class="flex-1 flex align-center justify-center" v-for="(item, index) in list" :key="index">
				<text class="font-sm text-muted">{{item.letter}}</text>
			</view>
		</view>
	</view>
</template>

<script>
	import FreeNavBar from '@/components/free-ui/free-nav-bar.vue'
	import FreeListItem from '@/components/free-ui/free-list-item.vue'
	export default {
		components: {
			FreeNavBar,
			FreeListItem
		},
		data() {
			return {
				topList: [{
						title: "新的朋友",
						cover: "/static/images/mail/friend.png",
						event: ""
					},
					{
						title: "群聊",
						cover: "/static/images/mail/group.png",
						event: ""
					},
					{
						title: "标签",
						cover: "/static/images/mail/tag.png",
						event: ""
					}
				],
				list: [{
					"letter": "A",
					"data": [
						"阿苏",
						"阿拉",
						"阿勒",
						"阿里",
						"安庆",
						"澳机"
					]
				}, {
					"letter": "B",
					"data": [
						"保罗",
						"包头",
						"北海福成",
						"北南苑",
						"北都国际"
					]
				}, {
					"letter": "C",
					"data": [
						"长山场",
						"长国",
						"常德",
						"长花~",
						"长王",
						"常机",
						"成双",
						"赤峰"
					]
				}, {
					"letter": "D",
					"data": [
						"大理爱你",
						"大周哈哈",
						"达河",
						"丹浪",
						"德芒",
						"迪香里拉",
					]
				}, {
					"letter": "E",
					"data": [
						"鄂多斯",
					]
				}, {
					"letter": "F",
					"data": [
						"福乐",
					]
				}, {
					"letter": "G",
					"data": [
						"固原六盘",
						"广盘龙",
						"广白机",
						"桂江",
					]
				}, {
					"letter": "H",
					"data": [
						"哈尔滨太平",
						"哈密",
						"海美兰",
						"海拉尔",
						"邯郸",
					]
				}, {
					"letter": "I",
					"data": []
				}, {
					"letter": "J",
					"data": [
						"鸡西兴",
						"佳木斯",
						"嘉峪",
					]
				}, {
					"letter": "K",
					"data": [
						"克拉玛依",
						"库车龟兹",
						"库尔勒",
					]
				}, {
					"letter": "L",
					"data": [
						"拉萨贡嘎",
						"黎平",
						"林芝米",
						"柳州白莲",
					]
				}, {
					"letter": "M",
					"data": [

					]
				}, {
					"letter": "N",
					"data": [

					]
				}, {
					"letter": "O",
					"data": []
				}, {
					"letter": "P",
					"data": [
						"普洱思茅"
					]
				}, {
					"letter": "Q",
					"data": [
						"齐齐哈尔",
						"秦皇岛山",
						"青岛流亭",
						"衢州机场",
						"泉州晋江机场"
					]
				}, {
					"letter": "R",
					"data": [
						"日喀则和"
					]
				}, {
					"letter": "S",
					"data": [
						"三亚凤凰",
						"汕头",
						"上海虹桥",
						"上海浦东",
						"深圳宝安",
						"沈阳桃仙",
						"石家庄正定",
						"苏南硕放"
					]
				}, {
					"letter": "T",
					"data": [
						"塔城",
					]
				}, {
					"letter": "U",
					"data": []
				}, {
					"letter": "V",
					"data": []
				}, {
					"letter": "W",
					"data": [
						"文山",
						"温永强",
						"乌海",
						"武汉天",
					]
				}, {
					"letter": "X",
					"data": []
				}, {
					"letter": "Y",
					"data": []
				}, {
					"letter": "Z",
					"data": [
						"昭通",
						"芷江",
						"中卫",
						"舟山",
					]
				}],
				top: 0, // 状态栏 + 导航栏的高度
				scrollHeight: 0, // scrollview的高度
				scrollInto: '' // 用于与索引列表数据联动
			}
		},
		onLoad() {
			// 计算this.top的值
			let info = uni.getSystemInfoSync()
			this.top = info.statusBarHeight + uni.upx2px(90)
			// 计算scrollHeight的值
			this.scrollHeight = info.windowHeight - this.top
		},
		methods: {
			touchstart(e) {
				console.log("touchstart: ", e.touches[0].pageY)
				// 获取用户触摸索引列表的Y坐标
				let Y = e.touches[0].pageY
				// 计算触摸的坐标的字母索引
				let index = Math.floor(Y / this.itemHeight)
				let item = this.list[index]
				if (item) {
					this.scrollInto = 'item-' + item.letter
				}

			},
			touchmove(e) {

			},
			touchend(e) {

			}
		},
		computed: {
			// 每个索引的高度
			itemHeight() {
				let count = this.list.length
				if (count < 1) {
					return 0
				}
				return this.scrollHeight / count
			}
		}
	}
</script>

<style>

</style>
