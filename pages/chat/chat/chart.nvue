<template>
	<view>
		<!-- 导航栏 -->
		<free-nav-bar title titleValue="CTO" showBack>
			<free-icon-button slot="right" :iconValue="'\ue6fd'" />
		</free-nav-bar>

		<!-- 聊天内容区域 -->
		<scroll-view scroll-y class="position-fixed left-0 right-0 px-3" style="bottom: 105rpx;" :style="'top:'+ navBarHeight +'px'">
			<!-- 聊天信息列表组件 -->
			
			<template v-for="(item, index) in list" >
				<free-chat-item :item="item" :index="index" :pretime="index>0?list[index-1].create_time:0" @long="handleLongPress"></free-chat-item>
			</template>
		</scroll-view>

		<!-- 底部输入框部分 -->
		<view class="position-fixed bottom-0 left-0 right-0 flex border-top align-center" style="height: 105rpx;background-color: #F7F7F6;">
			<free-icon-button slot="right" :iconValue="'\ue606'" />
			<view class="flex-1">
				<textarea fixed class="bg-white rounded p-2 font-md" style="height: 75rpx;" />
				</view>
			<free-icon-button slot="right" :iconValue="'\ue605'" />
			<free-icon-button slot="right" :iconValue="'\ue603'" />
		</view>
		
		<!-- 弹出层 -->
		<free-popup ref="popupRef" :bodyWidth="200" :bodyHeight="getMenusHeight" :tabbarHeight="105">
			<view class="flex flex-column" style="width: 240rpx;" :style="setMenusStyle">
				<view class="flex-1 flex align-center" hover-class="bg-light" v-for="(item,index) in setMenusList" :key="index" @click="handleMenuItemClick(item.event)">
					<text class="font-md p-3">{{item.name}}</text>
				</view>
			</view>
		</free-popup>
	</view>
</template>

<script>
import FreeNavBar from '@/components/free-ui/free-nav-bar.vue'
import FreeIconButton from '@/components/free-ui/free-icon-button.vue'
import FreeChatItem from '@/components/free-ui/free-chat-item.vue'
import FreePopup from "@/components/free-ui/free-popup.vue"
export default {
  name: 'ChatIndex',
  components: {
		FreeNavBar,
		FreeIconButton,
		FreeChatItem,
		FreePopup
	},
  props: {},
  data () {
    return {
			propIndex: -1,		// 当前长按的聊天信息索引
			statusBarHeight: 0,	// 系统状态栏高度
			navBarHeight: 0,		// 导航栏高度
			menus: [{
					name: '复制',
					event: ""
				},
				{
					name: '发送给朋友',
					event: ""
				},
				{
					name: '收藏',
					event: ""
				},
				{
					name: '删除',
					event: ""
				},
				{
					name: '多选',
					event: ""
				},
				{
					name: '撤回',
					event: ""
				}
			],
			list: [
				{
					avatar: "/static/images/demo/demo6.jpg",
					user_id: 2,
					nickname: "寻找阿诺泰的猪",
					type: "text",	// image、audio、video
					data: '你还是放弃吧。',
					create_time: 1615533541
				},
				{
					avatar: "/static/images/demo/demo5.jpg",
					user_id: 1,
					nickname: "Alexander",
					type: "text",	// image、audio、video
					data: '做人就要坚持，做人不坚持不如做狗!',
					create_time: 161554034
				},
				{
					avatar: "/static/images/demo/demo6.jpg",
					user_id: 2,
					nickname: "寻找阿诺泰的猪",
					type: "text",	// image、audio、video
					data: '你还是放弃吧。',
					create_time: 1615580357
				},
				{
					avatar: "/static/images/demo/demo5.jpg",
					user_id: 1,
					nickname: "Alexander",
					type: "text",	// image、audio、video
					data: '做人就要坚持，做人不坚持不如做狗!',
					create_time: 1615581234
				},
				{
					avatar: "/static/images/demo/demo6.jpg",
					user_id: 2,
					nickname: "寻找阿诺泰的猪",
					type: "text",	// image、audio、video
					data: '你还是放弃吧。',
					create_time: 1616444341
				},
				{
					avatar: "/static/images/demo/demo5.jpg",
					user_id: 1,
					nickname: "Alexander",
					type: "text",	// image、audio、video
					data: '做人就要坚持，做人不坚持不如做狗!',
					create_time: 1616444341
				},
				{
					avatar: "/static/images/demo/demo6.jpg",
					user_id: 2,
					nickname: "寻找阿诺泰的猪",
					type: "text",	// image、audio、video
					data: '你还是放弃吧。',
					create_time: 1616444341
				},
				{
					avatar: "/static/images/demo/demo5.jpg",
					user_id: 1,
					nickname: "Alexander",
					type: "text",	// image、audio、video
					data: '做人就要坚持，做人不坚持不如做狗!',
					create_time: 1616444941
				}
			]
		}
  },
  computed: {
		// 设置菜单样式的计算属性
		setMenusStyle() {
			return `height: ${this.getMenusHeight}rpx`
		},
		
		// 动态获取菜单高度,用于边界处理
		getMenusHeight() {
			let h = 100			
			return this.menus.length * h
		},
		
		// 动态设置菜单项
		setMenusList() {
			return this.menus.filter(v=>{
				if(v.name === '撤回' && !this.isdoSelf) {
					// 该项聊天信息不是本人ID就进行隐藏操作
					return false
				}
				return true
			})
		},
		
		isdoSelf() {
			// 获取本人id （假设拿到了）
			let id = 1
			let user_id = this.propIndex > -1 ? this.list[this.propIndex].user_id : 0
			return user_id === id
		}
	},
  watch: {},
  created () {},
	mounted() {
		// NVUE环境下获取系统状态栏的高度
		// #ifdef APP-NVUE
		this.statusBarHeight = plus.navigator.getStatusbarHeight()
		// #endif
		this.navBarHeight = this.statusBarHeight + uni.upx2px(90)
	},
  methods: {
		// 监听聊天信息弹出菜单点击事件
		handleMenuItemClick() {
			
		},
		
		// 监听聊天信息的长按事件
		handleLongPress({x,y,index}) {
			this.propIndex = index
			this.$refs.popupRef.show(x, y)
		}
	}
}
</script>

<style scoped lang="less">

</style>
